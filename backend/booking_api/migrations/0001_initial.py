# Generated by Django 4.0.10 on 2024-08-13 19:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(max_length=60)),
                ('password', models.CharField(max_length=128)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('refresh_token', models.CharField(blank=True, max_length=300, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('runtime', models.CharField(max_length=255)),
                ('director', models.CharField(max_length=255)),
                ('votes', models.IntegerField()),
                ('stars', models.CharField(max_length=50)),
                ('genre', models.CharField(choices=[('ACTION', 'Action'), ('COMEDY', 'Comedy'), ('DRAMA', 'Drama'), ('FANTASY', 'Fantasy'), ('HORROR', 'Horror'), ('ROMANCE', 'Romance'), ('THRILLER', 'Thriller')], max_length=50)),
                ('language', models.CharField(choices=[('EN', 'English'), ('ES', 'Spanish'), ('FR', 'French'), ('DE', 'German'), ('IT', 'Italian'), ('CN', 'Chinese'), ('JP', 'Japanese'), ('KR', 'Korean')], max_length=10)),
                ('description', models.TextField()),
                ('rating', models.CharField(choices=[('G', 'General Audience'), ('PG', 'Parental Guidance'), ('PG-13', 'Parents Strongly Cautioned'), ('R', 'Restricted'), ('NC-17', 'Adults Only')], default='G', max_length=5)),
                ('poster', models.ImageField(blank=True, null=True, upload_to='movie_images/')),
                ('starring_actors', models.ManyToManyField(related_name='movies', to='booking_api.actor')),
            ],
        ),
        migrations.CreateModel(
            name='Screening',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('screening_date', models.DateField()),
                ('screening_time', models.CharField(choices=[('09:00', '09:00 AM'), ('12:00', '12:00 PM'), ('15:00', '03:00 PM'), ('18:00', '06:00 PM'), ('21:00', '09:00 PM')], max_length=5)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_api.movie')),
            ],
        ),
        migrations.CreateModel(
            name='Theater',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=455)),
                ('total_rows', models.IntegerField()),
                ('seats_per_row', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('seat_id', models.CharField(max_length=10, unique=True)),
                ('seat_type', models.CharField(choices=[('Standard', 'Standard'), ('VIP', 'VIP'), ('Premium', 'Premium')], default='Standard', max_length=20)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('row', models.CharField(max_length=5)),
                ('number', models.IntegerField()),
                ('is_available', models.BooleanField(default=True)),
                ('version', models.IntegerField(default=1)),
                ('screening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='booking_api.screening')),
            ],
            options={
                'unique_together': {('screening', 'row', 'number')},
            },
        ),
        migrations.AddField(
            model_name='screening',
            name='theater',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking_api.theater'),
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Ongoing', 'Ongoing'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('screening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='booking_api.screening')),
                ('seats', models.ManyToManyField(related_name='bookings', to='booking_api.seat')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
